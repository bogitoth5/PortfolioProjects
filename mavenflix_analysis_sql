MavenFlix - Exploratory Data Analysis in SQL

Questions:
-- How have MavenFlix subscriptions trended over time?

-- What percentage of customers have subscribed for 5 months or more?

-- What month had the highest subscriber retention, and the lowest?

-----------------------------------------------------------------------------------------------

-- How have MavenFlix subscriptions trended over time?
	-The beginning of 2023 had a high number of new subscriptions, and also summer months, with the all time highest number in July 2023. The end of 2022 has the lowest number. 
	-There is a bigger decrease in the number of subsriptions at the end of 2022 and on the spring of 2023. 2023 August also has a big decrease compared to July. 
  


SELECT YEAR(created_date), MONTH(created_date), COUNT(created_date), COUNT(created_date)- LAG(COUNT(created_date)) OVER () as difference
FROM mavenflix
WHERE NOT (YEAR(created_date) = 2023 AND MONTH(created_date) = 9)
GROUP BY YEAR(created_date), MONTH(created_date);

-----------------------------------------------------------------------------------------------

-- What percentage of customers have subscribed for 5 months or more?

SELECT created_date, canceled_date, TIMESTAMPDIFF(month, created_date, canceled_date)
FROM mavenflix
WHERE TIMESTAMPDIFF(month, created_date, canceled_date) >= 5;

-- Count of users who used MavenFlix for more than 5 months, but canceled already.
SELECT COUNT(created_date) as more_than_5
FROM mavenflix
WHERE TIMESTAMPDIFF(month, created_date, canceled_date) >= 5;

-- All users
SELECT COUNT(created_date)
FROM mavenflix;

-- Check active and not active users
SELECT created_date, canceled_date,
	CASE
	WHEN canceled_date IS NULL THEN 1
    WHEN canceled_date IS NOT NULL THEN 0
    ELSE 'NA'
    END as active_user
FROM mavenflix;

WITH subscribers AS (
SELECT created_date, canceled_date,
	CASE
	WHEN canceled_date IS NULL THEN 1
    WHEN canceled_date IS NOT NULL THEN 0
    ELSE 'NA'
    END as active_user
FROM mavenflix)
SELECT ROUND(sum(active_user)/count(active_user)*100,2) as active_percentage
FROM subscribers;
